import socket, os, yaml
#from ansible.playbook import PlayBook
from subprocess import call, Popen, PIPE
from bluemixapi import BluemixAPI
from wasaasapi import WASaaSAPI

# Get settings generated by UCD
with open("vars.yaml", 'r') as s:
  l = yaml.load(s)

organisation = l['organisation']
space = l['space']
apiKey= l['apiKey']
regionKey = l['regionKey']
instanceName = l['instanceName']
install = l['install']


bx = BluemixAPI(region_key = regionKey, apiKey = apiKey)
authorization = 'Bearer ' + bx.get_token()

was = WASaaSAPI(region_key = regionKey, org = organisation, space = space, si_name = instanceName, token = authorization)


##### Setup a new service instance

# Check if we can connect
s = socket.socket()
adminip = was.get_adminip()
rootpw = was.get_rootpassword()
port = 22
try:
  s.connect((adminip, port)) 
except Exception as e: 
  print("something's wrong with %s:%d. Exception is %s" % (address, port, e))
  # Now we need to setup OpenVPN
  exit('Please setup openvpn to connect to region')
finally:
  s.close()

# Remove ssh fingerprint if it exists, as this is probably a recycled IP
call(['ssh-keygen', '-R', adminip])

# add the ip to known hosts so any automation that goes through ssh runs smoothly
p = Popen(['ssh-keyscan', '-t', 'ssh-rsa', adminip], stdin=PIPE, stdout=PIPE, stderr=PIPE)
o, r = p.communicate()
home = os.getenv('HOME')
with open(home + "/.ssh/known_hosts", 'a') as f:
  f.write(o.strip()+'\n')

# Copy ssh keys etc to the service instance
call(['sshpass', '-p', rootpw, 'ssh-copy-id', 'root@' + adminip])


# Install the necessary bits
if 'ucdagent' in install:
  # Call ansible to setup agents
  # We're assuming UCD will already have populated ucd-vars.yaml
  call(['ansible-playbook', '-i', adminip +',', 'UCD-Agent-Setup.yaml'], cwd='/home/virtuser/wasaas-setup/ansible')
  
if 'was_profile' in install:
  # Get wsadmin user and password from WASaaS broker
  wsadmin = was.get_wsadmin_user()
  wspass = was.get_wsadmin_password()
  
  changed = False
  # Load the was-vars.yaml
  with open("ansible/was-vars.yaml", 'r') as s:
    l = yaml.load(s)
  
  if l['wsadminuser'] != wsadmin:
    l['wsadminuser'] = str(wsadmin)
    changed = True
  
  if l['wsadminpass'] != wspass:
    l['wsadminpass'] = str(wspass)
    changed = True
    
  if changed:
    with open("ansible/was-vars.yaml", 'w') as f:
      f.write(yaml.dump(l, default_flow_style=False))

  call(['ansible-playbook', '-i', adminip +',', 'WAS-Setup.yaml'], cwd='/home/virtuser/wasaas-setup/ansible')


## Later we might run runbooks directly from python
#pb = PlayBook(playbook='UCDsetup.yml', inventory=adminip+',')
#pb.run()

